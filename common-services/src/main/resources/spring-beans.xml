<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				       http://www.springframework.org/schema/context 
				       http://www.springframework.org/schema/context/spring-context-3.0.xsd
				       http://www.springframework.org/schema/tx 
				       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				       http://www.springframework.org/schema/aop
				       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />




<!-- 1:配置注解的自动扫描的范围 
<context:component-scan base-package="com.xingfeng.service"></context:component-scan>
<context:component-scan base-package="com.xingfeng.dao"></context:component-scan>
-->

<!-- 2:配置数据源 
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:oracle:thin:@182.61.12.98:1521/orcl</value>
		</property>
		<property name="user">
			<value>xingfeng</value>
		</property>
		<property name="password">
			<value>xingfeng</value>
		</property>
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<property name="maxPoolSize">
			<value>30</value>
		</property>
		<property name="initialPoolSize">
			<value>10</value>
		</property>
		<property name="maxIdleTime">
			<value>60</value>
		</property>
		<property name="acquireIncrement">
			<value>5</value>
		</property>
		<property name="maxStatements">
			<value>0</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>60</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>true</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
	</bean>-->


<!-- 3:创建sessionFactory，这是spring整合hibernate的入口 
<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="dataSource" ref="dataSource"></property>
	<property name="configLocation">
		<value>
			classpath:hibernate.cfg.xml
		</value>
	</property>
</bean>-->
<!-- 4:创建事务管理器 
<bean id="txManage" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="dataSource" ref="dataSource" />
	<property name="sessionFactory" ref="sessionFactory"></property>
</bean>-->

<!-- 5:以注解的形式管理事务
<tx:annotation-driven transaction-manager="txManage"/> 
-->
<import resource="classpath*:spring-camel.xml" />

</beans>